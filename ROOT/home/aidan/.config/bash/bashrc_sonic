
# SONiC specific functions
# TODO: Probably better to refactor this into a script so it can be shared easier...

sonic-ssh() {

    # Dependencies: sudo apt install sshpass

    # Set default password if not provided
    local password="${2:-YourPaSsWoRd}"

    # Use the provided last part of the IP address
    local ip_suffix="$1"

    # Combine the prefix directly with the provided suffix
    local full_ip="192.168.122.${ip_suffix}"

    # SSH into the VM using sshpass and provided options
    sshpass -p "$password" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no admin@"$full_ip"
}

sonic-scp() {

    # Dependencies: sudo apt install sshpass

    # Local file to transfer
    local local_file="$1"

    # Use the provided last part of the IP address
    local ip_suffix="$2"

    # Combine the prefix directly with the provided suffix
    local full_ip="192.168.122.${ip_suffix}"

    # Set default password if not provided
    local password="${3:-YourPaSsWoRd}"

    # Securely copy the file using sshpass and scp with provided options
    sshpass -p "$password" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$local_file" admin@"$full_ip":"/home/admin"
}

sonic-install() {

    # Dependencies: sudo apt install virt-manager libvirt-clients libvirt-daemon
    # reboot might be required

    # Path to .img or .img.gz file
    local img_path="${1:-./sonic-vs.img}"

    if [[ "$img_path" == *.gz ]]; then
        echo "Image is compressed, decompressing..."
        gzip -d "$img_path"
        img_path="${img_path%.gz}"
    fi

    local vm_name=$(basename $img_path .img)

    virt-install \
    --name "$vm_name" \
    --memory 6000 \
    --os-variant debian12 \
    --disk path="$img_path" \
    --import \
    --graphics none \
    --noautoconsole

    echo "Waiting for VM to start and get IP address..."
    local ip_info
    while true; do
        ip_info=$(virsh domifaddr "$vm_name" | grep ipv4)

        # Check if the IP address was found
        if [[ -n "$ip_info" ]]; then
            echo "VM is up and running. IP information:"
            echo "$ip_info"
            break
        else
            sleep 3
        fi
    done
}

sonic-slave(){
    docker run -it --mount src="$(pwd)",target=/src,type=bind sonicdev-microsoft.azurecr.io:443/sonic-slave-bullseye /bin/bash
}